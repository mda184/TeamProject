[NOT COMPLETE, adding more as I go]

MODULES

DATABASE LISTS:

Users
Profiles
Posts
Comments
Groups
Schedules
Resumes
Lost and Found Items
Polls


Objects:

User (Object)
	-unique ID
	-associated profile (reference)
	-list of friends (User)
	-list of notifations (references)
	-list of groups (references, either owner or memeber)
	-list of lost and found items (references)
	-list of polls (references, either owner or voted on)
	-associated schedule (reference ID)
	-associated resume    (reference ID)
	-password
	-functions:
		-addFriend(user)
		-getPassword
		-getName
		-getEmail
		-getFriends
		-search(name)
		-addNotification(notification)
		-getID
		-getSchedule
		-getGroups
		-getProfile
		-getResume
		-getLostAndFound
		
		
Profile (Object)
	-unique ID
	-has an associated User (based on ID)
	-list of posts on the profile (IDs)


	-functions:
		-addPost(Object Post)
		-assignUser(Object user)
		-setVisibility(ID, visibility)

Post (Object)
	-unique ID
	-content
	-has an associated user (ID)
	-visibility setting
	-list of comments (IDs)
	-functions:
		-changeVisibility(setting)
		-getComments
		-edit(content)
		-getID
		-new(user, content)
		-delete(ID)
	
Comment (Object)
	-uniqie ID
	-user who created it (ID)
	-post its related to (ID)
	-content
	-Functions:
		-new(user, post, content)
		-getContent
		-updateContent(id, content)
		-getID
		delete(ID)

Group (Object)
	-unique ID
	-name
	-permssion to join
	-Functions:
		-addUser(user)
		-join(user, ID)
		-delete(ID)

	
Notification:
	-type
	-sender
	-reciever
	-Functions
		-new(sender, reciever, type)
		
Schedule
	-ID
	-Functions
		-new(userID,content)
		-delete(ID)

Resume
	-ID
	-Functions:
		-new(userID, file)
		-remove(userID)

Lost and Found Item
	-ID
	-Funtions:
		-new(user, content)

Poll
	-ID
	-Functions
		-new(user,content)
UI:

Login Screen (UI)
Create User (UI)
Search Bar(UI) [sub-module on all pages? not sure about this]
Search Results(UI)
Profile Screen (UI)
	-comment section
Groups (UI)
Schedule (UI)
Resume (UI)
Polls
	
	
CONTROLLERS:

-controllers create an object, store it in the database, and (optinal) display a new UI to user
-create account
-create comment
-create post
-create group
-create schedule
-create lost and found item
-create poll
ValidateUser
	-takes login infor and checks database for user info
ValidateGroup







Some notes:

Not sure if this is the best way to handle profiles. Could be a variable in users? 
Currently, a profile is loaded by calling the profiles list with a user object. Let me know if you guys have any thoughts.


Need to figure out how notifications/search bar works. Is it one UI that overlays all other overlays? If so, we need to think about how to add this to sequence diagrams.
	
