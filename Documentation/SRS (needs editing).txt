Purpose

The intended audience for this software are students at Memorial University of Newfoundland.
Its purpose is for students within the university to be able to interact with each other through
and share opinions and content.

OVERALL DESCRIPTION
Product Perspective

This product is a self-contained product. Within this SRS, a student is able to register as
long as they have a student ID and an email. This SRS assumes that the student is a verified 
user at the university with an email suffix "@mun.ca". <<<<<<<DIAGRAM>>>>>>>>

Product Functions

The major functions the product must perform is: 
i) create an user profile
ii) sign in a registered user
iii) display another user's profile
iv) send friend requests, add friends when accepted
v) create a post, allow user to edit own posts and comment on any post they can see
vi) create a group, allow group owner to edit a group, allow users to join groups
vii) create a course schedule for any user
viii) allow users to upload a resume
ix) maintain lost and found section, allow users to create posts within it
x) create a poll, allow owner to delete polls, allow users to vote on polls,

User Classes and Characteristics

The User classes will be UC1-UC24
The User characteristicts of the intended users is novice - advanced education level, provided
the user is a registered student at University. Any type of user will be able to access the software
provided they are a registered student at MUN or have administrative privelages.


Operating Environment
The Project is web-based and will be hosted on the university server. It is intended to work on any
browser in any operating system. It is currently assumed that it is only viewed on a personal computer
and not on any mobile environment. 

Design and Implementation Constraint
Any Regular user will be able to basic functions like signing in, creating a profile, adding 
friends, creating/editing a post, joining a group, creating and voting a poll. However, each user
has to have a valid email id that ends with mun.ca, which is the way the system assumes that the user 
is a MUN user. Every User has privacy restrictions, the profile has limited visibility for 
non- friends/ the public. But for every friend in the profile have complete access to the user's profile
and vice-versa.

User Documentation


Assumptions and Dependancies

Any Software related dependancies will be listed in a readme file on the git repository. We
are assuming that whoeve reads the documents has already viewed this file and has a understanding.
Dependancies:  Use Cases, Diagrams, Functional/Non-functional

