Purpose

The intended audience are the students at MUN and the purpose is for students to be able to 
create an account, so as to be able to interact with other students within the university.

OVERALL DESCRIPTION
Product Perspective

This product is a self-contained product. Within this SRS, a student is able to register as
long as they have a student ID and an email. This SRS assumes that the student is a verified 
user at the university with an email suffix "@mun.ca". <<<<<<<DIAGRAM>>>>>>>>

Product Functions

The major functions the product must perform is: 
i) creating an user profile
ii) signing in a registered user
iii) accessing another user's profile
iv) adding a friend
v) creating a post
vi) editing a post, commenting on a post
vii) creating a group
viii) editing a group(owner)
ix) joining a group
x) creating a course schedule
xi) uploading a resume
xii) accessing lost and found section
xiii) create a poll, vote on a poll

User Classes and Characteristics

The User classes will be UC1-UC24
The User characteristicts of the intended users is novice - advanced education level, provided
the user is a registered student at University. Any type of user will be able to access the software
provided they are a registered student at MUN or have administrative privelages.


Operating Environment
The Project is web-based and will be hosted on the university server. It can be viewed on
a Personal Computer. It is currently assumed that it is only viewed on a personal computer and not
on any mobile environment. 

Design and Implementation Constarint
Any Regular user will be able to basic functions like signing in, creating a profile, adding 
friends, creating/editing a post, joining a group, creating and voting a poll. However, each user
has to have a valid email id that ends with mun.ca, which is the way the system assumes that the user 
is a MUN user. Every User has privacy restrictions, the profile has limited visibility for non- friends/ the public. But for every friend in the profile have complete access to the user's profile and vice-versa.

User Documentation


Assumptions and Dependancies

Any Software related dependancies will be listed in a readme file on the git repository. We
are assuming that whoeve reads the documents has already viewed this file and has a understanding.
Dependancies:  Use Cases, Diagrams, Functional/Non-functional

